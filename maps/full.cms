// This script defines each of the assignable virtual buttons, then assigns
// CMS controls to each logical combination. Where a combination is not used
// it is commented out, but the assigned CMS control is considered reserved for
// future expansion

script

  %define stick.x.axis JS2.A1
  %define stick.y.axis JS2.A2
  %define stick.z.axis JS2.A3

  %define throttle.x.axis JS1.A1
  %define throttle.y.axis JS1.A2
  %define throttle.z.axis JS1.A3

  %define shift JS2.B4
  %define alt JS1.B3

  %define stick.btn1 JS2.B1
  %define stick.btn2 JS2.B2
  %define stick.btn3 JS2.B3

  %define stick.hat1.up JS2.B5
  %define stick.hat1.right JS2.B6
  %define stick.hat1.down JS2.B7
  %define stick.hat1.left JS2.B8

  %define stick.hat2.up JS2.B9
  %define stick.hat2.right JS2.B10
  %define stick.hat2.down JS2.B11
  %define stick.hat2.left JS2.B12

  %define stick.pov.up JS2.B25
  %define stick.pov.right JS2.B27
  %define stick.pov.down JS2.B29
  %define stick.pov.left JS2.B31

  %define throttle.btn4 JS1.B4

  %define throttle.hat1.up JS1.B7
  %define throttle.hat1.right JS1.B6
  %define throttle.hat1.down JS1.B5
  %define throttle.hat1.left JS1.B8

  %define throttle.hat2.up JS1.B12
  %define throttle.hat2.right JS1.B9
  %define throttle.hat2.down JS1.B10
  %define throttle.hat2.left JS1.B11

  %define throttle.hat3.up JS1.B16
  %define throttle.hat3.right JS1.B13
  %define throttle.hat3.down JS1.B14
  %define throttle.hat3.left JS1.B15

  %define throttle.pov.up JS1.B31
  %define throttle.pov.right JS1.B25
  %define throttle.pov.down JS1.B27
  %define throttle.pov.left JS1.B29

//CMS.A1 = stick.x.axis;
  CMS.A2 = stick.y.axis;
  CMS.A3 = stick.z.axis;

  CMS.A17 = throttle.x.axis;
  CMS.A18 = throttle.y.axis;
//CMS.A19 = throttle.z.axis;

  CMS.B1 = stick.btn1 and not (shift and not alt);
  CMS.B2 = stick.btn1 and (shift or alt);
//CMS.B3 = stick.btn1 and not shift and alt;
//CMS.B4 = stick.btn1 and shift and alt;

  CMS.B5 = stick.btn2 and not (shift and alt);
//CMS.B6 = stick.btn2 and shift and not alt;
//CMS.B7 = stick.btn2 and not shift and alt;
  CMS.B8 = stick.btn2 and shift and alt;

  CMS.B9 = stick.btn3 and not shift and not alt;
  CMS.B10 = stick.btn3 and shift and not alt;
  CMS.B11 = stick.btn3 and alt;
//CMS.B12 = stick.btn3 and shift and alt;

  CMS.B13 = stick.hat1.up and not shift and not alt;
  CMS.B14 = stick.hat1.up and shift and not alt;
  CMS.B15 = stick.hat1.up and not shift and alt;
  CMS.B16 = stick.hat1.up and shift and alt;

  CMS.B17 = stick.hat1.right and not shift and not alt;
  CMS.B18 = stick.hat1.right and shift and not alt;
  CMS.B19 = stick.hat1.right and not shift and alt;
  CMS.B20 = stick.hat1.right and shift and alt;

  CMS.B21 = stick.hat1.down and not shift and not alt;
  CMS.B22 = stick.hat1.down and shift and not alt;
  CMS.B23 = stick.hat1.down and not shift and alt;
  CMS.B24 = stick.hat1.down and shift and alt;

  CMS.B25 = stick.hat1.left and not shift and not alt;
  CMS.B26 = stick.hat1.left and shift and not alt;
  CMS.B27 = stick.hat1.left and not shift and alt;
  CMS.B28 = stick.hat1.left and shift and alt;

  CMS.B29 = stick.hat2.up and not shift and not alt;
  CMS.B30 = stick.hat2.up and shift and not alt;
  CMS.B31 = stick.hat2.up and alt;
//CMS.B32 = stick.hat2.up and shift and alt;

  CMS.B33 = stick.hat2.right and not shift and not alt;
  CMS.B34 = stick.hat2.right and (shift or alt);
//CMS.B35 = stick.hat2.right and not shift and alt;
//CMS.B36 = stick.hat2.right and shift and alt;

  CMS.B37 = stick.hat2.down and not shift and not alt;
  CMS.B38 = stick.hat2.down and shift and not alt;
  CMS.B39 = stick.hat2.down and alt;
//CMS.B40 = stick.hat2.down and shift and alt;

  CMS.B41 = stick.hat2.left and not shift and not alt;
  CMS.B42 = stick.hat2.left and (shift or alt);
//CMS.B43 = stick.hat2.left and not shift and alt;
//CMS.B44 = stick.hat2.left and shift and alt;

  CMS.B45 = stick.pov.up and not shift and not alt;
  CMS.B46 = stick.pov.up and shift and not alt;
  CMS.B47 = stick.pov.up and not shift and alt;
  CMS.B48 = stick.pov.up and shift and alt;

  CMS.B49 = stick.pov.right and not shift and not alt;
  CMS.B50 = stick.pov.right and (shift or alt);
//CMS.B51 = stick.pov.right and not shift and alt;
//CMS.B52 = stick.pov.right and shift and alt;

  CMS.B53 = stick.pov.down and not alt;
//CMS.B54 = stick.pov.down and shift and not alt;
  CMS.B55 = stick.pov.down and not shift and alt;
  CMS.B56 = stick.pov.down and shift and alt;

  CMS.B57 = stick.pov.left and not shift and not alt;
  CMS.B58 = stick.pov.left and (shift or alt);
//CMS.B59 = stick.pov.left and not shift and alt;
//CMS.B60 = stick.pov.left and shift and alt;

  CMS.B61 = throttle.btn4 and not shift and not alt;
  CMS.B62 = throttle.btn4 and shift and not alt;
  CMS.B63 = throttle.btn4 and not shift and alt;
  CMS.B64 = throttle.btn4 and shift and alt;

  CMS.B65 = throttle.hat1.up and not shift and not alt;
  CMS.B66 = throttle.hat1.up and shift and not alt;
  CMS.B67 = throttle.hat1.up and alt;
//CMS.B68 = throttle.hat1.up and shift and alt;

  CMS.B69 = throttle.hat1.right and not alt;
//CMS.B70 = throttle.hat1.right and shift and not alt;
//CMS.B71 = throttle.hat1.right and not shift and alt;
  CMS.B72 = throttle.hat1.right and shift and alt;

  CMS.B73 = throttle.hat1.down and not shift and not alt;
  CMS.B74 = throttle.hat1.down and shift and not alt;
  CMS.B75 = throttle.hat1.down and alt;
//CMS.B76 = throttle.hat1.down and shift and alt;

  CMS.B77 = throttle.hat1.left and not alt;
//CMS.B78 = throttle.hat1.left and shift and not alt;
//CMS.B79 = throttle.hat1.left and alt;
  CMS.B80 = throttle.hat1.left and shift and alt;

  CMS.B81 = throttle.hat2.up and not shift and not alt;
  CMS.B82 = throttle.hat2.up and (shift or alt);
//CMS.B83 = throttle.hat2.up and not shift and alt;
//CMS.B84 = throttle.hat2.up and shift and alt;

  CMS.B85 = throttle.hat2.right and not shift and not alt;
  CMS.B86 = throttle.hat2.right and (shift or alt);
//CMS.B87 = throttle.hat2.right and not shift and alt;
//CMS.B88 = throttle.hat2.right and shift and alt;

  CMS.B89 = throttle.hat2.down and not shift and not alt;
  CMS.B90 = throttle.hat2.down and (shift or alt);
//CMS.B91 = throttle.hat2.down and not shift and alt;
//CMS.B92 = throttle.hat2.down and shift and alt;

  CMS.B93 = throttle.hat2.left and not shift and not alt;
  CMS.B94 = throttle.hat2.left and (shift or alt);
//CMS.B95 = throttle.hat2.left and not shift and alt;
//CMS.B96 = throttle.hat2.left and shift and alt;

  CMS.B97 = throttle.hat3.up and not shift and not alt;
  CMS.B98 = throttle.hat3.up and (shift or alt);
//CMS.B99 = throttle.hat3.up and not shift and alt;
//CMS.B100 = throttle.hat3.up and shift and alt;

  CMS.B101 = throttle.hat3.right and not shift and not alt;
  CMS.B102 = throttle.hat3.right and (shift or alt);
//CMS.B103 = throttle.hat3.right and not shift and alt;
//CMS.B104 = throttle.hat3.right and shift and alt;

  CMS.B105 = throttle.hat3.down and not shift and not alt;
  CMS.B106 = throttle.hat3.down and (shift or alt) and not (shift and alt);
//CMS.B107 = throttle.hat3.down and not shift and alt;
  CMS.B108 = throttle.hat3.down and shift and alt;

  CMS.B109 = throttle.hat3.left;
//CMS.B110 = throttle.hat3.left and shift and not alt;
//CMS.B111 = throttle.hat3.left and not shift and alt;
//CMS.B112 = throttle.hat3.left and shift and alt;

  CMS.B113 = throttle.pov.up;
//CMS.B114 = throttle.pov.up and shift and not alt;
//CMS.B115 = throttle.pov.up and not shift and alt;
//CMS.B116 = throttle.pov.up and shift and alt;

  CMS.B117 = throttle.pov.right and not shift and not alt;
  CMS.B118 = throttle.pov.right and (shift or alt);
//CMS.B119 = throttle.pov.right and not shift and alt;
//CMS.B120 = throttle.pov.right and shift and alt;

  CMS.B121 = throttle.pov.down;
//CMS.B122 = throttle.pov.down and shift and not alt;
//CMS.B123 = throttle.pov.down and not shift and alt;
//CMS.B124 = throttle.pov.down and shift and alt;

  CMS.B125 = throttle.pov.left and not shift and not alt;
  CMS.B126 = throttle.pov.left and (shift or alt);
//CMS.B127 = throttle.pov.left and not shift and alt;
//CMS.B128 = throttle.pov.left and shift and alt;

  toggle(D1) = throttle.hat1.left and not shift and alt;
  toggle(D2) = throttle.hat1.right and not shift and alt;

  if (D1) then
    CMS.A19 = 256;
  else
    CMS.A19 = throttle.z.axis;
  endif
  
  if (D2) then
    CMS.A1 = 128;
    CMS.A4 = stick.x.axis;
  else
    CMS.A1 = stick.x.axis;
    CMS.A4 = 128;
  endif
  
endscript
